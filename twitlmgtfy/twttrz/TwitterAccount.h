/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "TwitterAccount.h"
#import "Twitter-Structs.h"
#import "NSCoding.h"
#import <Foundation/NSObject.h>

@class TwitterApplePushDestination, NSArray, TwitterTimelineStream, TwitterUser, TwitterTrendLocation, NSMutableSet, NSDate, NSMutableArray, TwitterDirectMessagesConversationManager, NSString, TwitterSettings, TwitterRepliesStream, TwitterConfiguration, TwitterScribe, ABHTTPRequest, NSMutableDictionary;
@protocol TwitterAccountDelegate;

__attribute__((visibility("hidden")))
@interface TwitterAccount : NSObject <NSCoding> {
@private
	id<TwitterAccountDelegate> delegate;
	NSString* username;
	NSString* password;
	NSString* oAuthToken;
	NSString* oAuthTokenSecret;
	NSMutableDictionary* usersByID;
	NSMutableDictionary* usersByUsername;
	NSMutableDictionary* statusesByID;
	NSMutableDictionary* directMessagesByID;
	NSMutableSet* friendIDs;
	NSMutableSet* blockIDs;
	NSMutableSet* ignoreRetweetsIDs;
	NSString* apiRoot;
	NSString* searchAPIRoot;
	BOOL needToSavePassword;
	TwitterUser* user;
	TwitterTimelineStream* timelineStream;
	TwitterRepliesStream* repliesStream;
	TwitterDirectMessagesConversationManager* directMessagesManager;
	unsigned notificationOptions;
	NSDate* freshTweets;
	NSDate* freshMentions;
	NSDate* freshMessages;
	NSDate* freshSearches;
	NSMutableArray* savedSearches;
	NSMutableArray* lists;
	NSMutableArray* listSubscriptions;
	NSArray* _followingLists;
	NSString* localTrendGPSToken;
	NSDate* lastTrendUpdate;
	NSArray* trends;
	TwitterTrendLocation* currentTrendLocation;
	NSArray* topTweets;
	NSArray* sulCategories;
	NSMutableArray* drafts;
	NSMutableArray* outbox;
	TwitterSettings* settings;
	TwitterConfiguration* twitterConfiguration;
	TwitterApplePushDestination* applePushDestination;
	BOOL disableUserStream;
	ABHTTPRequest* userStream;
	BOOL droppedLastUserStreamConnection;
	float userStreamReconnectDelay;
	NSDate* lastUserStreamEvent;
	int scribeSpinLock;
	TwitterScribe* scribe;
	struct {
		unsigned staleUser : 1;
		unsigned staleSavedSearches : 1;
		unsigned staleLists : 1;
		unsigned loadingUser : 1;
		unsigned loadingTrends : 1;
		unsigned loadingTopTweets : 1;
		unsigned loadingSavedSearches : 1;
		unsigned loadingLists : 1;
		unsigned loadingListSubscriptions : 1;
		unsigned loadingSULCategories : 1;
		unsigned loadingXAuthTokens : 1;
		unsigned lastGeotaggingState : 1;
	} _flags;
}
@property(assign, nonatomic) id delegate;
@property(readonly, assign, nonatomic) NSString* username;
@property(readonly, assign, nonatomic) NSString* password;
@property(retain, nonatomic) NSString* oAuthToken;
@property(copy, nonatomic) NSString* oAuthTokenSecret;
@property(readonly, assign, nonatomic) NSString* apiRoot;
@property(readonly, assign, nonatomic) NSString* searchAPIRoot;
@property(assign, nonatomic) unsigned notificationOptions;
@property(retain, nonatomic) TwitterSettings* settings;
@property(readonly, assign, nonatomic) TwitterConfiguration* twitterConfiguration;
@property(retain, nonatomic) TwitterApplePushDestination* applePushDestination;
@property(retain, nonatomic) TwitterUser* user;
@property(retain, nonatomic) NSMutableSet* friendIDs;
@property(retain, nonatomic) NSMutableSet* blockIDs;
@property(retain, nonatomic) NSDate* lastUserStreamEvent;
@property(assign, nonatomic) BOOL disableUserStream;
@property(assign, nonatomic) BOOL lastGeotaggingState;
@property(readonly, assign, nonatomic) TwitterScribe* scribe;
-(id)init;
-(id)initWithUsername:(id)username password:(id)password apiRoot:(id)root searchAPIRoot:(id)root4;
-(id)initWithUsername:(id)username password:(id)password;
-(id)autosaveName;
-(unsigned)hash;
-(BOOL)isEqual:(id)equal;
-(void)saveStreams;
-(id)keychainService;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(void)refreshTwitterConfiguration;
-(void)didReceiveNewConfigurationSettings:(id)settings info:(id)info;
-(void)dealloc;
-(BOOL)hasPassword;
-(BOOL)isConnectedToUserStream;
-(void)refreshTimelines;
-(void)refresh;
-(void)refreshForced:(BOOL)forced;
-(void)refreshSettings;
-(void)didLoadSettings:(id)settings info:(id)info;
-(void)refreshDMs;
-(void)refreshBlocks;
-(void)didReceiveBlocks:(id)blocks info:(id)info;
-(void)refreshIgnoreRetweets;
-(void)didReceiveIgnoreRetweets:(id)retweets info:(id)info;
-(void)setPassword:(id)password;
-(int)compare:(id)compare;
-(void)_postAccountDidUpdateNotification;
-(void)myUserResponse:(id)response info:(id)info;
-(void)myUserDidUpdate:(id)myUser;
-(id)request:(id)request;
-(id)authenticatedRequest:(id)request;
-(void)verifyCredentials:(id)credentials;
-(void)requestUserWithID:(id)anId callback:(id)callback;
-(void)unauthenticatedUserForIDResponse:(id)idresponse info:(id)info;
-(void)authenticatedUserForIDResponse:(id)idresponse info:(id)info;
-(void)requestUserWithUsername:(id)username callback:(id)callback;
-(void)unauthenticatedUserForUsernameResponse:(id)usernameResponse info:(id)info;
-(void)authenticatedUserForUsernameResponse:(id)usernameResponse info:(id)info;
-(void)findUsers:(id)users callback:(id)callback;
-(void)findUsersResponse:(id)response info:(id)info;
-(void)requestStatusWithID:(id)anId callback:(id)callback;
-(void)unauthenticatedStatusResponse:(id)response info:(id)info;
-(void)authenticatedStatusResponse:(id)response info:(id)info;
-(id)timelineStream;
-(id)repliesStream;
-(id)aggregateTimelineAndMentionsStream;
-(id)directMessagesManager;
-(BOOL)isAuthorOfStatus:(id)status;
-(BOOL)isAuthorOfDirectMessage:(id)directMessage;
-(BOOL)isMentionedInStatus:(id)status;
-(void)favoriteStatus:(id)status;
-(void)addStatusToFavorites:(id)favorites;
-(void)unfavoriteStatus:(id)status;
-(void)removeStatusFromFavorites:(id)favorites;
-(BOOL)isFavoriteStatus:(id)status;
-(void)deleteStatus:(id)status;
-(void)deleteDirectMessage:(id)message;
-(void)deleteDirectMessageConversation:(id)conversation;
-(void)deleteStatusResponse:(id)response info:(id)info;
-(BOOL)hasFreshTweets;
-(BOOL)hasFreshMentions;
-(BOOL)hasFreshMessages;
-(BOOL)hasFreshSearches;
-(BOOL)hasAnythingUnread;
-(BOOL)hasFreshAnythingApplicableToStatusItem;
-(BOOL)hasFreshAnythingApplicableToDockBadge;
-(void)markAllAsRead;
-(void)noteFreshTweets;
-(void)noteFreshMentions;
-(void)noteFreshMessages;
-(void)noteFreshSearches;
-(void)noteDirectMessagesUnreadStateDidChange;
-(id)unNotifiedStatuses:(id)statuses;
-(id)unNotifiedMessages;
-(void)somethingDidUpdate:(id)something;
-(void)setDeviceNotifications:(BOOL)notifications forUser:(id)user;
-(void)retweet:(id)retweet callback:(id)callback;
-(id)drafts;
-(void)saveDraft:(id)draft;
-(void)removeDraft:(id)draft;
-(void)_processOutbox;
-(void)didSend:(id)send directMessage:(id)message;
-(void)didSend:(id)send;
-(void)send:(id)send;
-(void)sendDirectMessage:(id)message to:(id)to callback:(id)callback;
-(void)didMessage:(id)message info:(id)info;
-(void)_errorPostingComposition:(id)composition message:(id)message error:(id)error;
-(void)error:(id)error shorteningURLsForComposition:(id)composition;
-(void)error:(id)error uploadingAttachment:(id)attachment forComposition:(id)composition;
-(void)sendCompletedComposition:(id)composition;
-(void)didSendCompletedComposition:(id)composition info:(id)info;
-(BOOL)isDuckie;
@end

@interface TwitterAccount (Profile)
-(void)updateProfileImage:(id)image callback:(id)callback;
-(void)didUpdateProfileImage:(id)image info:(id)info;
-(void)updateProfileName:(id)name email:(id)email url:(id)url location:(id)location description:(id)description callback:(id)callback;
-(void)didUpdateProfile:(id)profile info:(id)info;
@end

@interface TwitterAccount (SavedSearches)
-(BOOL)isLoadingSavedSearches;
-(void)updateSavedSearches;
-(void)savedSearchesResponse:(id)response info:(id)info;
-(id)savedSearches;
-(BOOL)containsSavedSearch:(id)search;
-(void)addSavedSearch:(id)search;
-(void)addSavedSearchResponse:(id)response info:(id)info;
-(void)removeSavedSearch:(id)search;
-(void)removeSavedSearchResponse:(id)response info:(id)info;
@end

@interface TwitterAccount (Trends)
-(BOOL)_ignoreLocalTrends;
-(void)updateTrends;
-(void)_endTrendLocationGPSUpdates;
-(void)_updateTrends;
-(void)_findTrendLocationsFrom:(id)from;
-(void)detectTrendLocation;
-(void)currentLocationResponse:(id)response;
-(void)trendLocationsResponse:(id)response info:(id)info;
-(id)trends;
-(BOOL)trendsNeedRefresh;
-(void)trendsResponse:(id)response info:(id)info;
-(void)updateSULCategories;
-(id)sulCategories;
-(void)sulCategoriesResponse:(id)response info:(id)info;
@end

@interface TwitterAccount (Block)
-(void)blockUserID:(id)anId;
-(void)blockUsername:(id)username;
-(void)block:(id)block;
-(void)unblockUserID:(id)anId;
-(void)unblockUsername:(id)username;
-(void)unblock:(id)unblock;
-(void)userID:(id)anId isBlocked:(id)blocked;
-(void)user:(id)user isBlocked:(id)blocked;
-(void)isBlockedResponse:(id)response info:(id)info;
-(void)blockUserAndRemoveAssociatedStatuses:(id)statuses;
@end

@interface TwitterAccount (Follow)
-(void)checkIfUser:(id)user follows:(id)follows callback:(id)callback;
-(void)followingStatus:(id)status info:(id)info;
-(void)user:(id)user follows:(id)follows callback:(id)callback;
-(void)userFollowsResponse:(id)response info:(id)info;
-(void)followUserID:(id)anId callback:(id)callback;
-(void)unfollowUserID:(id)anId callback:(id)callback;
-(void)follow:(id)follow callback:(id)callback;
-(void)stopFollowing:(id)following callback:(id)callback;
@end

@interface TwitterAccount (Spam)
-(void)reportSpam:(id)spam;
@end

@interface TwitterAccount (Lists)
-(void)updateLists;
-(BOOL)isLoadingLists;
-(id)_listMatchingList:(id)list;
-(id)definitiveLists:(id)lists;
-(void)listsResponse:(id)response replaceList:(id*)list;
-(void)listsResponse:(id)response info:(id)info;
-(void)listSubscriptionsResponse:(id)response info:(id)info;
-(id)followingLists;
-(id)subscribedLists;
-(id)lists;
-(BOOL)_listSet:(id)set containsList:(id)list;
-(BOOL)ownsList:(id)list;
-(BOOL)followsList:(id)list;
-(void)createList:(id)list description:(id)description mode:(id)mode callback:(id)callback;
-(void)didCreateList:(id)list info:(id)info;
-(void)updateList:(id)list name:(id)name description:(id)description mode:(id)mode callback:(id)callback;
-(void)didUpdateList:(id)list info:(id)info;
-(void)deleteList:(id)list;
-(void)listNamed:(id)named callback:(id)callback;
-(void)listWithUsername:(id)username slug:(id)slug callback:(id)callback;
-(void)listResponse:(id)response info:(id)info;
-(void)followList:(id)list;
-(void)unfollowList:(id)list;
-(void)list:(id)list doesFollow:(id)follow callback:(id)callback;
-(void)listDoesFollowUser:(id)user info:(id)info;
-(void)list:(id)list follow:(id)follow;
-(void)list:(id)list unfollow:(id)unfollow;
@end

@interface TwitterAccount (TopTweets)
-(id)topTweetsUsername;
-(void)updateTopTweets;
-(id)topTweets;
-(void)topTweetsResponse:(id)response info:(id)info;
@end

@interface TwitterAccount (xAuth)
-(void)migrateToXAuthIfNeeded;
-(void)migrateToXAuthResponse:(id)xauthResponse info:(id)info;
@end

@interface TwitterAccount (Push)
-(void)registerForPushWithDeviceToken:(id)deviceToken;
-(void)unregisterForPush;
-(void)didRegisterForPush:(id)push info:(id)info;
@end

@interface TwitterAccount (Uniquification)
-(id)cachedUserWithID:(id)anId;
-(id)cachedUserWithUsername:(id)username;
-(id)cachedStatusWithID:(id)anId;
-(id)cachedDirectMessageWithID:(id)anId;
-(id)definitiveUser:(id)user;
-(id)definitiveStatus:(id)status;
-(id)definitiveMessage:(id)message;
-(id)definitiveUsers:(id)users;
-(id)definitiveStatuses:(id)statuses;
-(id)definitiveDirectMessages:(id)messages;
-(id)cachedUsers;
-(id)usersStartingWith:(id)with;
-(id)cachedStatuses;
@end

@interface TwitterAccount (UserStream)
-(void)_scheduleReconnectAfterDelay:(float)delay;
-(void)_cancelUserStreamReconnect;
-(BOOL)isConnectedToUserStream;
-(void)_reopenStream;
-(void)openUserStream;
-(void)closeUserStream;
-(void)successfullyConnected;
-(void)_handleUserStreamStatus:(id)status;
-(void)didReceiveStreamObject:(id)object info:(id)info;
-(void)didCheckReplyInUserStream:(id)userStream info:(id)info;
-(void)didDropStream:(id)stream info:(id)info;
-(void)_checkUserStreamHealth;
@end

