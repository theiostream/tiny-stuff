/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "UIScrollViewDelegate.h"
#import "UIWebViewDelegate.h"
#import "UIActionSheetDelegate.h"
#import <UIKit/UIViewController.h>

@class UIBarButtonItem, TwitterStatus, UILabel, UIButton, UIWebView, UIActivityIndicatorView, UIImageView, UIActionSheet, NSURL, TwitterAccount;

__attribute__((visibility("hidden")))
@interface TwitterPadWebViewController : UIViewController <UIWebViewDelegate, UIScrollViewDelegate, UIActionSheetDelegate> {
@private
	TwitterAccount* account;
	TwitterStatus* statusContext;
	NSURL* loadURL;
	NSURL* currentURL;
	UIWebView* _webView;
	UIBarButtonItem* back;
	UIBarButtonItem* forward;
	UIBarButtonItem* fullScreen;
	UIBarButtonItem* compose;
	UIBarButtonItem* action;
	UIBarButtonItem* pageTitle;
	UILabel* pageLabel;
	UIImageView* bg;
	UIActivityIndicatorView* spinner;
	UIButton* reloadButton;
	UIActionSheet* _actionSheet;
	BOOL hasProvidedReferer;
	struct {
		unsigned isLoading : 1;
		unsigned shouldRemove : 1;
	} _flags;
}
@property(retain, nonatomic) TwitterAccount* account;
@property(retain, nonatomic) TwitterStatus* statusContext;
@property(retain, nonatomic) NSURL* loadURL;
@property(retain, nonatomic) NSURL* currentURL;
-(id)init;
-(void)_unlinkFromSharedWebView;
-(void)dealloc;
-(void)scrollViewDidScroll:(id)scrollView;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)scrollViewWillBeginZooming:(id)scrollView withView:(id)view;
-(float)ab_swipeColumnWidth:(int)width;
-(BOOL)standalone;
-(void)loadView;
-(id)ab_tweetBarView;
-(void)viewDidAppear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)_updateToolbar;
-(void)back:(id)back;
-(void)forward:(id)forward;
-(void)reload:(id)reload;
-(void)_beginFullscreen;
-(void)fullScreen:(id)screen;
-(void)fullScreenDone:(id)done;
-(void)ab_scrollToTop;
-(void)action:(id)action;
-(void)actionSheet:(id)sheet willDismissWithButtonIndex:(int)buttonIndex;
-(void)setPageTitle:(id)title;
-(void)openExternalURL:(id)url;
-(void)shouldOpenExternalURL:(id)url info:(id)info;
-(BOOL)shouldStartLoadWithURL:(id)url;
-(BOOL)webView:(id)view shouldStartLoadWithRequest:(id)request navigationType:(unsigned)type;
-(void)webViewDidStartLoad:(id)webView;
-(void)webViewDidFinishLoad:(id)webView;
-(void)webView:(id)view didFailLoadWithError:(id)error;
@end

