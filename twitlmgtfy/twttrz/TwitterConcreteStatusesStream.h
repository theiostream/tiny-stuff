/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "NSCoding.h"
#import "TwitterStream.h"

@class NSString, NSError, NSDate, TwitterStatus, NSArray;

__attribute__((visibility("hidden")))
@interface TwitterConcreteStatusesStream : TwitterStream <NSCoding> {
@private
	NSString* guid;
	NSArray* statuses;
	NSDate* lastUpdated;
	TwitterStatus* _newestStatus;
	NSError* loadNewerError;
	NSError* loadOlderError;
	struct {
		unsigned isLoadingNewer : 1;
		unsigned isLoadingOlder : 1;
		unsigned isAtEnd : 1;
		unsigned loadingOlderLessThan20Count : 5;
		unsigned needsToLoadFromDisk : 1;
		unsigned needsToWriteToDisk : 1;
		unsigned loadConservatively : 1;
	} _flags;
}
@property(retain, nonatomic) NSError* loadOlderError;
@property(retain, nonatomic) NSError* loadNewerError;
@property(assign, nonatomic) BOOL loadConservatively;
-(id)init;
-(id)guid;
-(id)storedStreamPath;
-(id)autosaveName;
-(void)_readFromDisk;
-(void)_writeToDisk;
-(void)saveStream;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(void)dealloc;
-(id)errorStatusForError:(id)error;
-(id)statuses;
-(id)newestStatus;
-(id)oldestStatus;
-(id)newestStatusID;
-(id)oldestStatusID;
-(id)lastUpdated;
-(void)postStatusesChangedNotification;
-(void)setStatuses:(id)statuses;
-(BOOL)hasData;
-(id)definitiveStatuses:(id)statuses;
-(void)addStatus:(id)status;
-(int)maxCount;
-(BOOL)shouldIndexUsersInAutocomplete;
-(void)addStatuses:(id)statuses;
-(void)_deleteStatus:(id)status;
-(void)deleteStatusNotification:(id)notification;
-(void)_postError:(id)error;
-(int)minStatusesToConsiderBeingGap;
-(void)statusesResponse:(id)response couldBeGap:(BOOL)gap isFromFillingInGap:(BOOL)gap3;
-(void)loadNewerResponse:(id)response info:(id)info;
-(void)markAtEnd;
-(void)loadOlderResponse:(id)response info:(id)info;
-(void)fillInGapResponse:(id)gapResponse info:(id)info;
-(void)_loadNewer;
-(void)_loadOlder;
-(void)loadNewer;
-(BOOL)isLoadingNewer;
-(void)loadOlder;
-(void)retryLoadOlder;
-(void)_loadBeforeGap:(id)gap;
-(void)fillInGap:(id)gap;
-(id)loadNewerResponseCallback;
-(id)loadOlderResponseCallback;
-(id)fillInGapResponseCallback:(id)gapResponseCallback;
@end

