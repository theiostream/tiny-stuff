/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <Foundation/NSObject.h>
#import "NSCoding.h"
#import "ABHTTPRequest.h"

@class NSData, NSInputStream, NSMutableData, NSError, NSURL, NSDictionary, ABMutableMultiDictionary, NSURLConnection, ABHTTPMultipartFormData, NSString, ABCallback;

__attribute__((visibility("hidden")))
@interface ABHTTPRequest : NSObject <NSCoding> {
@private
	NSURL* url;
	NSURL* finalURL;
	NSString* method;
	NSData* body;
	NSInputStream* bodyStream;
	ABMutableMultiDictionary* headers;
	ABHTTPMultipartFormData* multipartFormData;
	NSString* username;
	NSString* password;
	NSString* oAuthConsumerKey;
	NSString* oAuthConsumerSecret;
	NSString* oAuthToken;
	NSString* oAuthTokenSecret;
	long connectionTimeout;
	int maxRetries;
	int retries;
	int autoRetries;
	ABCallback* responseCallback;
	ABCallback* progressCallback;
	ABCallback* chunkCallback;
	int statusCode;
	NSMutableData* _data;
	NSError* error;
	NSDictionary* responseHeaders;
	long long downloadContentLength;
	long long downloadedBytes;
	long long uploadContentLength;
	long long uploadedBytes;
	unsigned _flags;
	int streamingState;
	int streamingBytesLeft;
	NSMutableData* streamingBuffer;
	NSURLConnection* connection;
	double startTime;
	int networkStatus;
}
@property(copy, nonatomic) NSURL* url;
@property(copy, nonatomic) NSString* method;
@property(copy, nonatomic) NSData* body;
@property(retain, nonatomic) NSInputStream* bodyStream;
@property(retain, nonatomic) NSString* username;
@property(retain, nonatomic) NSString* password;
@property(retain, nonatomic) NSString* oAuthConsumerKey;
@property(retain, nonatomic) NSString* oAuthConsumerSecret;
@property(retain, nonatomic) NSString* oAuthToken;
@property(retain, nonatomic) NSString* oAuthTokenSecret;
@property(retain, nonatomic) ABCallback* responseCallback;
@property(retain, nonatomic) ABCallback* progressCallback;
@property(retain, nonatomic) ABCallback* chunkCallback;
@property(assign, nonatomic) long connectionTimeout;
@property(assign, nonatomic) int maxRetries;
@property(copy, nonatomic) NSError* error;
@property(assign, nonatomic) int statusCode;
@property(readonly, assign, nonatomic) ABMutableMultiDictionary* headers;
@property(retain, nonatomic) NSDictionary* responseHeaders;
@property(readonly, assign, nonatomic) double startTime;
@property(readonly, assign, nonatomic) int networkStatus;
@property(copy, nonatomic) NSData* data;
@property(readonly, assign, nonatomic) double uploadProgress;
@property(readonly, assign, nonatomic) double downloadProgress;
@property(retain, nonatomic) ABHTTPMultipartFormData* multipartFormData;
@property(readonly, assign, nonatomic) NSURL* finalURL;
+(id)request;
-(id)init;
-(void)cancel;
-(void)dealloc;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(void)addValue:(id)value forHTTPHeaderField:(id)httpheaderField;
-(void)setValue:(id)value forHTTPHeaderField:(id)httpheaderField;
-(void)startRequest;
-(void)endRequest;
-(void)noteProgress;
@end

@interface ABHTTPRequest (ABAdditions)
+(void)GET:(id)get callback:(id)callback;
+(void)HEAD:(id)head callback:(id)callback;
@end

@interface ABHTTPRequest (CF)
-(void)CF_startRequest;
@end

@interface ABHTTPRequest (NS)
-(id)urlRequest;
-(void)NS_startRequest;
-(void)NS_startRequestInBackground;
-(void)connection:(id)connection didReceiveResponse:(id)response;
-(void)connection:(id)connection didReceiveData:(id)data;
-(void)connectionDidFinishLoading:(id)connection;
-(void)connection:(id)connection didFailWithError:(id)error;
-(void)connection:(id)connection didSendBodyData:(int)data totalBytesWritten:(int)written totalBytesExpectedToWrite:(int)write;
-(id)connection:(id)connection willSendRequest:(id)request redirectResponse:(id)response;
@end

@interface ABHTTPRequest (Additions)
+(void)beginNetworkActivity;
+(void)endNetworkActivity;
+(id)persistentRequests;
+(void)savePersistentRequests;
+(void)addPersistentRequest:(id)request;
+(void)removePersistentRequest:(id)request;
+(void)servicePersistentRequests;
-(BOOL)isPersistent;
-(void)_didStartRequest;
-(void)_didEndRequest;
@end

@interface ABHTTPRequest (OAuth)
-(id)oAuthAuthorizationHeader;
@end

@interface ABHTTPRequest (Streams)
+(id)keepAliveData;
-(BOOL)startStreamChunk:(id)chunk;
-(void)processStreamChunk:(id)chunk;
-(void)didRecieveChunk:(id)chunk;
@end

