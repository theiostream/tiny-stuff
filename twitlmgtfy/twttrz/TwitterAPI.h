/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "TwitterAPI.h"
#import <Foundation/NSObject.h>

@class NSString, ABCallback, TwitterAccount;

__attribute__((visibility("hidden")))
@interface TwitterAPI : NSObject {
@private
	NSString* apiRoot;
	TwitterAccount* authenticateWithAccount;
	ABCallback* responseCallback;
}
+(id)requestWithAPIRoot:(id)apiroot callback:(id)callback;
+(id)authenticatedRequestWithAPIRoot:(id)apiroot account:(id)account callback:(id)callback;
-(id)initWithAccount:(id)account apiRoot:(id)root callback:(id)callback;
-(void)dealloc;
@end

@interface TwitterAPI (AccountMethods)
-(void)verifyCredentials;
-(void)verifyCredentialsResponse:(id)response info:(id)info;
-(void)getSettings;
-(void)updateSettings:(id)settings;
-(void)settingsResponse:(id)response info:(id)info;
-(void)updateProfileImage:(id)image;
-(void)rateLimitStatus;
-(void)rateLimitResponse:(id)response info:(id)info;
-(void)updateProfileName:(id)name email:(id)email url:(id)url location:(id)location description:(id)description;
-(void)savedSearches;
-(void)savedSearchesResponse:(id)response info:(id)info;
-(void)createSavedSearch:(id)search named:(id)named;
-(void)createSavedSearchResponse:(id)response info:(id)info;
-(void)removeSavedSearch:(id)search;
-(void)removeSavedSearchResponse:(id)response info:(id)info;
@end

@interface TwitterAPI (BlockMethods)
-(void)blockingIDs;
-(void)didReceiveBlockingIds:(id)ids info:(id)info;
-(void)blockUserID:(id)anId;
-(void)blockUsername:(id)username;
-(void)unblockUserID:(id)anId;
-(void)unblockUsername:(id)username;
-(id)blocksExistsCallback;
-(void)isBlockingUserID:(id)anId;
-(void)isBlockingUsername:(id)username;
-(void)blocksExistsResponse:(id)response info:(id)info;
-(void)ignoreRetweetsIDs;
-(void)didReceiveIgnoreRetweets:(id)retweets info:(id)info;
@end

@interface TwitterAPI (DirectMessageMethods)
-(id)directMessageResponseCallback;
-(id)directMessagesResponseCallback;
-(void)directMessagesSinceID:(id)anId maxID:(id)anId2 page:(id)page;
-(void)sentDirectMessagesSinceID:(id)anId maxID:(id)anId2 page:(id)page;
-(void)send:(id)send toUserID:(id)userID;
-(void)send:(id)send toUsername:(id)username;
-(void)directMessageResponse:(id)response info:(id)info;
-(void)destroyDirectMessage:(id)message;
-(void)directMessagesResponse:(id)response info:(id)info;
@end

@interface TwitterAPI (FavoriteMethods)
-(void)favoritesForUserID:(id)userID page:(id)page;
-(void)favoritesForUsername:(id)username page:(id)page;
-(void)favoriteStatus:(id)status;
-(void)unfavoriteStatus:(id)status;
-(void)didFavorite:(id)favorite info:(id)info;
@end

@interface TwitterAPI (FriendshipMethods)
-(void)followUserID:(id)anId;
-(void)followUsername:(id)username;
-(void)followUsernames:(id)usernames;
-(void)lookupRelationships:(id)relationships;
-(void)unfollowUserID:(id)anId;
-(void)unfollowUsername:(id)username;
-(void)relationshipsResponse:(id)response info:(id)info;
-(id)relationshipsResponseCallback;
-(id)friendshipExistsCallback;
-(id)friendshipInfoCallback;
-(void)userID:(id)anId followsUserID:(id)anId2;
-(void)friendshipForSourceUserID:(id)sourceUserID targetUserID:(id)anId;
-(void)friendshipForSourceUsername:(id)sourceUsername targetUsername:(id)username;
-(void)username:(id)username followsUsername:(id)username2;
-(void)friendshipInfo:(id)info info:(id)info2;
-(void)parseFriendshipInfoXML:(id)xml info:(id)info;
-(void)parseFriendshipInfoSourceXML:(id)xml info:(id)info;
-(void)friendshipExists:(id)exists info:(id)info;
@end

@interface TwitterAPI (NotificationMethods)
-(void)enableNotificationsForUserID:(id)userID;
-(void)enableNotificationsForUsername:(id)username;
-(void)disableNotificationsForUserID:(id)userID;
-(void)disableNotificationsForUsername:(id)username;
@end

@interface TwitterAPI (Private)
+(id)platform;
+(id)currentOSVersion;
+(id)userAgent;
-(id)apiRoot;
-(id)baseURL;
-(id)apiRoot_v1;
-(id)username;
-(id)baseRequest;
-(id)baseRequestWithPartialURL:(id)partialURL apiRoot:(id)root;
-(void)attachCredentials:(id)credentials;
-(id)request:(id)request apiRoot:(id)root method:(id)method body:(id)body multiPartFormData:(id)data persistent:(BOOL)persistent callback:(id)callback start:(BOOL)start;
-(void)request:(id)request method:(id)method body:(id)body multiPartFormData:(id)data persistent:(BOOL)persistent callback:(id)callback;
-(void)POST:(id)post multiPartFormData:(id)data callback:(id)callback;
-(void)POST:(id)post body:(id)body callback:(id)callback;
-(void)persistentPOST:(id)post body:(id)body callback:(id)callback;
-(void)GET:(id)get callback:(id)callback;
-(void)v1_request:(id)request method:(id)method body:(id)body multiPartFormData:(id)data persistent:(BOOL)persistent callback:(id)callback;
-(void)v1_POST:(id)post body:(id)body callback:(id)callback;
-(void)v1_POST:(id)post multiPartFormData:(id)data callback:(id)callback;
-(void)v1_persistentPOST:(id)post body:(id)body callback:(id)callback;
-(void)v1_GET:(id)get callback:(id)callback;
-(void)v1_DELETE:(id)aDelete body:(id)body callback:(id)callback;
-(void)v1_DELETE:(id)aDelete callback:(id)callback;
-(BOOL)fixBadClockSetting:(id)setting;
-(void)requestResponse:(id)response info:(id)info;
-(void)parseTwitterError:(id)error info:(id)info;
-(void)invokeCallback:(id)callback;
-(void)statusRequest:(id)request sinceID:(id)anId maxID:(id)anId3 count:(id)count page:(id)page;
-(id)statusesResponseCallback;
-(id)statusResponseCallback;
-(void)statusResponse:(id)response info:(id)info;
-(void)statusesResponse:(id)response info:(id)info;
-(id)usersResponseCallback;
-(id)userResponseCallback;
-(id)usersJSONResponseCallback;
-(void)userResponse:(id)response info:(id)info;
-(void)_usersResponse:(id)response info:(id)info parser:(SEL)parser;
-(void)usersResponse:(id)response info:(id)info;
-(void)usersJSONResponse:(id)response info:(id)info;
-(id)listsResponseCallback;
-(id)listResponseCallback;
-(void)listsResponse:(id)response info:(id)info;
-(void)listResponse:(id)response info:(id)info;
@end

@interface TwitterAPI (StatusMethods)
-(void)publicTimeline;
-(void)friendsTimelineSinceID:(id)anId maxID:(id)anId2 count:(id)count page:(id)page;
-(void)repliesSinceID:(id)anId maxID:(id)anId2 count:(id)count page:(id)page;
-(void)userTimelineForUserID:(id)userID sinceID:(id)anId maxID:(id)anId3 count:(id)count page:(id)page;
-(void)userTimelineForUsername:(id)username sinceID:(id)anId maxID:(id)anId3 count:(id)count page:(id)page;
-(void)statusWithID:(id)anId;
-(void)_update:(id)update inReplyToStatusID:(id)statusID geotag:(BOOL)geotag latitude:(double)latitude longitude:(double)longitude;
-(void)updateWithComposition:(id)composition;
-(void)update:(id)update inReplyToStatusID:(id)statusID latitude:(double)latitude longitude:(double)longitude;
-(void)update:(id)update inReplyToStatusID:(id)statusID;
-(void)destroyStatus:(id)status;
@end

@interface TwitterAPI (UserMethods)
+(id)usersLookupParamDataWithEmails:(id)emails phones:(id)phones;
-(void)friendsForUserID:(id)userID cursor:(id)cursor;
-(void)friendsForUsername:(id)username cursor:(id)cursor;
-(void)followersForUserID:(id)userID cursor:(id)cursor;
-(void)userWithID:(id)anId;
-(void)userWithUsername:(id)username;
-(void)searchUsers:(id)users count:(id)count page:(id)page;
-(void)recommendationsForUsername:(id)username limit:(id)limit;
-(void)recommendationsForUserID:(id)userID limit:(id)limit;
-(void)userRecommendationsResponse:(id)response info:(id)info;
-(void)suggestionCategoriesForLanguage:(id)language country:(id)country;
-(void)suggestionCategoriesResponse:(id)response info:(id)info;
-(void)suggestedUsersForCategory:(id)category;
-(void)suggestedUsersForCategoryResponse:(id)categoryResponse info:(id)info;
-(void)usersWithEmails:(id)emails phones:(id)phones;
-(void)usersLookupResponse:(id)response info:(id)info;
-(void)parseUsersLookupJSON:(id)json info:(id)info;
-(void)parseSULUsersJSON:(id)json info:(id)info;
@end

@interface TwitterAPI (Additions)
@end

@interface TwitterAPI (Retweet)
-(void)retweet:(id)retweet;
-(void)retweetResponse:(id)response info:(id)info;
-(void)retweetedByMeSinceID:(id)anId maxID:(id)anId2 count:(id)count page:(id)page;
-(void)retweetedToMeSinceID:(id)meSinceID maxID:(id)anId count:(id)count page:(id)page;
-(void)retweetsOfMeSinceID:(id)meSinceID maxID:(id)anId count:(id)count page:(id)page;
@end

@interface TwitterAPI (SpamMethods)
-(id)reportSpamCallback;
-(void)reportSpamResponse:(id)response info:(id)info;
-(void)reportSpamUserID:(id)anId;
-(void)reportSpamUsername:(id)username;
@end

@interface TwitterAPI (Lists)
+(id)SULUsernameForCurrentLanguage;
-(void)listsForUsername:(id)username;
-(void)lists;
-(void)listSubscriptionsForUsername:(id)username;
-(void)listSubscriptions;
-(void)listMembershipsForUsername:(id)username;
-(void)listMemberships;
-(void)createList:(id)list description:(id)description mode:(id)mode;
-(void)updateList:(id)list name:(id)name description:(id)description mode:(id)mode;
-(void)deleteList:(id)list;
-(void)deleteListResponse:(id)response info:(id)info;
-(void)listStatuses:(id)statuses username:(id)username sinceID:(id)anId maxID:(id)anId4 count:(id)count page:(id)page;
-(void)listWithUsername:(id)username slug:(id)slug;
-(void)followList:(id)list username:(id)username;
-(void)unfollowList:(id)list username:(id)username;
-(void)list:(id)list username:(id)username followsUserID:(id)anId;
-(void)listDoesFollowUser:(id)user info:(id)info;
-(void)list:(id)list username:(id)username followUserID:(id)anId;
-(void)didfollowfromlist:(id)didfollowfromlist info:(id)info;
-(void)list:(id)list username:(id)username unfollowUserID:(id)anId;
-(void)didunfollowfromlist:(id)didunfollowfromlist info:(id)info;
@end

@interface TwitterAPI (Signup)
-(void)mobileSignupUsername:(id)username password:(id)password fullName:(id)name email:(id)email captchaToken:(id)token captchaSolution:(id)solution;
-(void)mobileSignupResponse:(id)response info:(id)info;
-(void)generateAccountWithUsername:(id)username password:(id)password name:(id)name email:(id)email language:(id)language timeZone:(id)zone discoverableByEmail:(id)email7 discoverableByMobile:(id)mobile;
-(void)generateAccountResponse:(id)response info:(id)info;
-(void)parseGenerateAccountErrorJSON:(id)json info:(id)info;
-(void)xAuthRequestAccessTokens;
-(void)xAuthMigrateResponse:(id)response info:(id)info;
@end

@interface TwitterAPI (Push)
-(void)registerForPushWithDeviceToken:(id)deviceToken enabledFor:(int)aFor;
-(void)loadPushSettings;
-(void)didReceiveSettings:(id)settings info:(id)info;
-(void)unregisterForPush;
-(void)didUnregisterForPush:(id)push info:(id)info;
-(void)didRegisterForPush:(id)push info:(id)info;
@end

@interface TwitterAPI (UserStream)
-(id)openUserStream:(id)stream track:(id)track;
-(void)didReceiveUserStreamJSON:(id)json info:(id)info;
-(void)handleUserStreamEvent:(id)event callback:(id)callback;
-(void)didCloseStream:(id)stream info:(id)info;
@end

@interface TwitterAPI (Trends)
-(void)trendLocationsAt:(id)at;
-(void)trendsAtLocation:(id)location excludingHashtags:(BOOL)hashtags;
-(void)trendLocationsResponse:(id)response info:(id)info;
-(void)_trends:(id)trends excludeHashtags:(BOOL)hashtags;
-(void)trends;
-(void)currentTrendsExcludingHashtags:(BOOL)hashtags;
-(void)dailyTrendsExcludingHashtags:(BOOL)hashtags;
-(void)weeklyTrendsExcludingHashtags:(BOOL)hashtags;
-(void)localTrendsResponse:(id)response info:(id)info;
-(void)trendsResponse:(id)response info:(id)info;
-(void)parseTrendsJSON:(id)json info:(id)info;
@end

@interface TwitterAPI (PlaceMethods)
-(void)geoSearch:(id)search;
-(void)reverseGeocode:(id)geocode;
-(void)topPlaces:(id)places;
-(void)similarPlaces:(id)places;
-(void)gotPlaces:(id)places info:(id)info;
-(void)createPlace:(id)place;
-(void)findPlace:(id)place;
-(void)gotPlace:(id)place info:(id)info;
@end

@interface TwitterAPI (PromotedContent)
-(void)logPromotedTweet:(id)tweet event:(int)event;
-(void)didLogPromotedTweet:(id)tweet info:(id)info;
-(void)searchForPromotedTweets:(id)promotedTweets;
-(void)didReceivePromotedTweets:(id)tweets info:(id)info;
-(void)logPromotedTrend:(id)trend event:(int)event;
-(void)logPromotedTrend:(id)trend event:(int)event extraParameters:(id)parameters;
-(void)didLogPromotedTrend:(id)trend info:(id)info;
@end

@interface TwitterAPI (t_co)
-(void)shortenURLString:(id)string;
-(void)shortenResponse:(id)response info:(id)info;
-(void)parseTCOJson:(id)json info:(id)info;
@end

@interface TwitterAPI (SearchStream)
-(id)openSearchStreamQuery:(id)query callback:(id)callback;
-(void)didReceiveSearchStreamJSON:(id)json info:(id)info;
@end

@interface TwitterAPI (Configuration)
-(void)refreshConfiguration:(id)configuration;
-(void)didReceiveNewDeciderSettings:(id)settings info:(id)info;
-(void)didReceiveNewConfigurationSettings:(id)settings info:(id)info;
@end

@interface TwitterAPI (Scribe)
-(void)scribe:(id)scribe;
@end

