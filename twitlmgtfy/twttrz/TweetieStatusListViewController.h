/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "UITableViewDelegate.h"
#import "UITableViewDataSource.h"
#import <UIKit/UIViewController.h>
#import "TweetieTweetViewControllerDelegate.h"
#import "UISearchDisplayDelegate.h"

@class NSArray, TwitterAccount, UISearchBar, UISearchDisplayController, UITableViewCell, UITableView, UILabel, UIActivityIndicatorView, UIImageView, UIView, TwitterStatus;

__attribute__((visibility("hidden")))
@interface TweetieStatusListViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UISearchDisplayDelegate, TweetieTweetViewControllerDelegate> {
@private
	TwitterAccount* account;
	UITableView* _tableView;
	UILabel* lastUpdatedLabel;
	UILabel* loadNewerLabel;
	UIImageView* loadNewerArrowView;
	UIActivityIndicatorView* loadNewerSpinner;
	UIView* headerExtra;
	UISearchBar* searchBar;
	UISearchDisplayController* searchDisplayController;
	NSArray* newStatuses;
	NSArray* statuses;
	NSArray* filteredStatuses;
	UITableViewCell* currentContextModeCell;
	TwitterStatus* flyToStatusUponReturningToView;
	struct {
		unsigned updateWithNewStatusesOnScrollingEnd : 1;
		unsigned loadNewerUIInReleaseState : 2;
		unsigned forceSearchBarOffscreen : 1;
		unsigned isLoadingNewer : 1;
		unsigned disruptorDidActivate : 1;
		unsigned extraDisruptorInset : 1;
		unsigned needToActivateState : 2;
		unsigned activateDisruptorOnScrollingEnd : 1;
		unsigned activateDisruptorWhenContentIsReady : 1;
		unsigned noStatuses : 1;
		unsigned recordNextDisruptorImpression : 1;
	} _flags;
}
@property(retain, nonatomic) TwitterAccount* account;
@property(retain, nonatomic) NSArray* statuses;
@property(retain, nonatomic) NSArray* filteredStatuses;
@property(readonly, assign, nonatomic) UITableView* tableView;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
-(void)dealloc;
-(id)persistentProxy;
-(void)decodeWithPersistentProxy:(id)persistentProxy;
-(void)endContextModeForCell:(id)cell;
-(void)endContextModeForCurrentCell;
-(void)beginContextModeForCell:(id)cell;
-(float)_headerHeight;
-(void)_performScrollingEndUpdates;
-(void)_setLoadNewerState:(int)state;
-(void)scrollViewDidScroll:(id)scrollView;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)_updateLoadingNewerState;
-(void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;
-(void)scrollViewDidEndDecelerating:(id)scrollView;
-(void)scrollViewDidEndScrollingAnimation:(id)scrollView;
-(BOOL)scrollViewShouldScrollToTop:(id)scrollView;
-(void)scrollViewDidScrollToTop:(id)scrollView;
-(id)lastUpdated;
-(void)_updateLastUpdatedLabel;
-(void)reload;
-(id)autosaveName;
-(id)_topSavedStatusIDDefaultsKey;
-(id)_topSavedStatusIDOffsetDefaultsKey;
-(void)requestTopStatusID;
-(void)noteNewTopStatusID:(id)anId;
-(void)saveScrollPosition;
-(id)statusForRow:(int)row;
-(float)heightForRow:(int)row inTableView:(id)tableView;
-(float)_verticalOffsetOfRow:(int)row;
-(void)restoreScrollPosition;
-(BOOL)isScrolling;
-(void)_updateWithNewStatuses;
-(id)appropriateSearchDisplayContentsController;
-(id)placeholderSearchStringForFilterBar;
-(void)loadHeaderView;
-(float)_headerExtraOffset;
-(void)loadView;
-(void)_updateLoadingNewerState:(BOOL)state;
-(BOOL)shouldHideHeaderOnLoad;
-(void)viewDidLoad;
-(void)viewDidUnload;
-(void)didReceiveMemoryWarning;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation duration:(double)duration;
-(id)scribePage;
-(id)scribeSection;
-(void)loadOlder:(id)older;
-(BOOL)canLoadNewer;
-(void)loadNewer:(id)newer;
-(void)viewedMostRecent:(id)recent;
-(id)indexPathForStatus:(id)status inStatusesArray:(id)statusesArray;
-(void)viewWillAppear:(BOOL)view;
-(void)doubleTappedRepresentativeTabItem;
-(void)viewDidAppear:(BOOL)view;
-(void)didBecomeActive:(id)active;
-(void)viewWillSwitchToAnotherSubTab;
-(void)viewWillDisappear:(BOOL)view;
-(void)searchDisplayControllerWillBeginSearch:(id)searchDisplayController;
-(void)searchDisplayController:(id)controller didLoadSearchResultsTableView:(id)view;
-(BOOL)searchDisplayController:(id)controller shouldReloadTableForSearchString:(id)searchString;
-(void)searchDisplayControllerWillEndSearch:(id)searchDisplayController;
-(id)filteredStatusForRow:(int)row;
-(float)tableView:(id)view heightForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(BOOL)disableMentionHighlighting;
-(BOOL)isLoadingNewer;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view willBeginEditingRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view commitEditingStyle:(int)style forRowAtIndexPath:(id)indexPath;
-(void)_navigateToStatus:(id)status animated:(BOOL)animated;
-(id)_activeStatusesArray;
-(id)_nonDummyActiveStatusArray;
-(void)fillInGap:(id)gap;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(void)pinchBegan:(id)began;
-(void)pinchChanged:(id)changed;
-(void)pinchEnded:(id)ended;
-(id)_statusAdjacentToStatus:(id)status inDirection:(int)direction;
-(BOOL)tweetViewController:(id)controller canNavigate:(int)navigate;
-(void)tweetViewController:(id)controller navigate:(int)navigate;
-(void)tweetViewController:(id)controller getCurrentIndex:(int*)index of:(int*)of;
-(void)_commonContextAction:(id)action;
-(void)statusCellContextReplyAction:(id)action;
-(void)statusCellContextLinkAction:(id)action;
-(void)statusCellContextRetweetAction:(id)action;
-(void)statusCellContextUserAction:(id)action;
-(void)statusCellContextFavoriteAction:(id)action;
-(void)statusCellContextActionAction:(id)action;
@end

