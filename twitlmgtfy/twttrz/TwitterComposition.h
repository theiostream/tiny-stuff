/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <Foundation/NSObject.h>
#import "TwitterComposition.h"
#import "Twitter-Structs.h"
#import "NSCoding.h"

@class TwitterStatus, NSMutableArray, TwitterUser, NSString, TwitterPlace, ABCallback, GeoRSSPoint;

__attribute__((visibility("hidden")))
@interface TwitterComposition : NSObject <NSCoding> {
@private
	NSString* text;
	TwitterUser* replyToUser;
	TwitterUser* directMessageUser;
	TwitterStatus* replyToStatus;
	BOOL isDraft;
	NSMutableArray* attachments;
	GeoRSSPoint* geotag;
	TwitterPlace* place;
	NSMutableArray* placeEntities;
	ABCallback* didSendCallback;
	unsigned backgroundIdentifier;
	BOOL dirty;
	BOOL hadFailedSend;
	struct {
		unsigned isLoading : 1;
		unsigned shouldRemove : 1;
	} _flags;
	int urlLength;
}
@property(retain, nonatomic) TwitterUser* replyToUser;
@property(retain, nonatomic) TwitterStatus* replyToStatus;
@property(retain, nonatomic) TwitterUser* directMessageUser;
@property(copy, nonatomic) NSString* text;
@property(assign, nonatomic) BOOL isDraft;
@property(retain, nonatomic) GeoRSSPoint* geotag;
@property(retain, nonatomic) TwitterPlace* place;
@property(retain, nonatomic) NSMutableArray* placeEntities;
@property(retain, nonatomic) ABCallback* didSendCallback;
@property(assign, nonatomic) BOOL dirty;
@property(assign, nonatomic) BOOL hadFailedSend;
@property(assign, nonatomic) int urlLength;
@property(readonly, assign, nonatomic) float sendProgress;
@property(readonly, assign, nonatomic) BOOL isSending;
@property(readonly, assign, nonatomic) int compositionType;
-(id)init;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(void)dealloc;
-(void)_beginSend;
-(void)_endSend:(BOOL)send;
-(BOOL)isGeoTaggable;
-(BOOL)isDirectMessage;
-(BOOL)isPublicReply;
-(void)_addUsernamePrefixIfNeeded;
-(BOOL)_removePrefix:(id)prefix;
-(void)_removeUsernamePrefix;
-(void)switchToPublicReply;
-(void)switchToDirectMessage;
-(int)characterLimit;
-(int)attachmentsLength;
-(int)remainingCharacters;
-(BOOL)isWorthSaving;
-(BOOL)isWorthSending;
-(BOOL)containsMoreThanMentions;
-(BOOL)isDocumentEdited;
-(id)appropriateTitle;
-(id)appropriateDraftTitle;
-(id)appropriateImage;
-(BOOL)matchesSearchString:(id)string;
-(void)addAttachment:(id)attachment;
-(void)removeAttachment:(id)attachment;
-(id)attachments;
-(BOOL)hasRoomForAnotherAttachment;
-(void)willDiscard;
-(id)textWithAttachments;
-(void)_sendFromAccount:(id)account;
-(void)didSend:(id)send;
-(void)errorSending;
-(int)numberOfAttachmentsPendingUpload;
-(BOOL)hasPendingAttachments;
-(void)sendFromAccount:(id)account;
-(void)didUploadAttachment:(id)attachment info:(id)info;
-(id)displayName;
-(id)fileURL;
-(void)trimEntities;
-(int)_updatedIndex:(int)index range:(NSRange)range newText:(id)text;
-(void)reindexEntitiesWithRange:(NSRange)range replacementText:(id)text;
@end

@interface TwitterComposition (Additions)
+(id)replyAllTextForStatus:(id)status fromAccount:(id)account;
+(id)quoteTweetTextForStatus:(id)status fromAccount:(id)account;
+(NSRange)initialSelectedRangeForComposeText:(id)composeText;
@end

